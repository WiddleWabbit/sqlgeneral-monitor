
                                       ---           README        ---


This script is in development to try and setup a system allowing certain or all database changes to be recorded and later executed based on a configuration file.

The specific queries etc are able to be set per database with a global configuration for which queries should be recorded. 
These recorded changes can then be run on another database allowing the developer/s to move updates or ecommerce orders easily and automatically from a development to a production website and vice verca.


Current Build Designed for use on:

    -   MySQL 5.6
    -   Python 2.6.6

Requires:

    -   enum34 1.6.6 (backported)
    -   MySQLdb 1.2.5


                                        ---           TODO         ---

        -   Feature
                -   Automatic flush of MySQL Log
                -   Lock Functionality
                -   Silent Running and Verbose
                -   Per Database Ignore certain SQL Commands otherwise recorded (CREATE TEMPORARY TABLE etc)

        -   monitor.py
                -   Keep track of how many lines processed and add the functionality to filter as well.

        -   sqlrun.py
                -   If there is a start transaction at the end of the command file with some
                    commands. Do not process it or its commands as they may be rolled back.

        -   conf.py
                -   Create a splitConfig function to replace the multiple repeat code instances.

        -   Tidyup
                -   index -> recorded_cmd
                -   next_index -> next_cmd
                -   Set full script timer
                -   clean .value from end of enums
                -   Add required permission values to readme
                -   Update Lists in readme


                                      ---     LIST VARIABLES NOTES   ---

SQLLOG LIST
name: sqllog

Type: List of Lists
Indexes: Enum Specified with COL enum class
  [COL.Line][COL.String][COL.Type][COL.QueryNo][COL.User][COL.Save][COL.Query]
Formats:
  [Integer][String][String][String][String][Integer][String]
Example:
  [
  [1]["Full SQL Connect Statment with Query Number Etc"]["Connect"]["1"]["deoem"][0]["SQL Connect Statement Only"]
  [2]["Full SQL Query Statment with Query Number Etc"]["Query"]["1"]["deoem"][1]["SQL Query Statement Only"]
  [3]["Full SQL Quit Statment with Query Number Etc"]["Quit"]["1"]["deoem"][0]["SQL Quit Statement Only"]
  ]

CONFIGURATION LIST
name: configuration 

Type: Dictionary of Lists
Indexes: Enum Specified with CONFIG enum class
  'DatabaseUser' : [CONFIG.Database, [CONFIG.IgnoreTables], CONFIG.Filter]
Formats:
  [String][[String][List of Strings][Integer]]
Example:
  [
  'user1' : [database1, [list, of, tables, to, ignore], 1]
  'user2' : [database2, [list, of, tables, to, ignore], 0]
  'user3' : [database3, [list, of, tables, to, ignore], 0]
  ]

RECORDABLE QUERY LIST
name: recordable

Type: List
Formats: Strings

Example:
['INSERT', 'UPDATE', 'DROP']
